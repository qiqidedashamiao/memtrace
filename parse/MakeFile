#CROSS = #aarch64-himix210-linux-sd3403v100-v1
#包含上一层级的配置文件 config.cfg
include ../config.cfg

TARGET = mem_log_parse

CPP	= $(CROSS)g++
CC	= $(CROSS)gcc
LD	= $(CROSS)ld
AR  = $(CROSS)ar
RM	= rm -f
STRIP	= $(CROSS)strip

MEMTRACE_SRCPATH = ./Src
MEMTRACE_LIBPATH = .
OBJ_PATH = ./Obj
BIN_PATH = .
SRC =  $(MEMTRACE_SRCPATH)/Parse.cpp $(MEMTRACE_SRCPATH)/maps.cpp

CFLAGS += -I./Include 
CFLAGS += -Wall -g --std=c++11
CFLAGS += -lpthread -lc -lrt -ldl

#增加默认栈深度的宏STACK_DEPTH
CFLAGS += -DSTACK_DEPTH=$(STACK_DEPTH)

#如果 USE_BACKTRACK为true，则增加宏USE_BACKTRACK
ifeq ($(USE_BACKTRACE),true)
	CFLAGS += -DUSE_BACKTRACE
endif

#如果CROSS值不为空，则增加宏CROSS
ifneq ($(CROSS),)
	CFLAGS += -DCROSS=$(CROSS)
endif

#增加默认ALSR
CFLAGS += -DASLR=$(ASLR)

#如果 PATHL_LIST 值不为空，则增加宏 PATHL_LIST
ifneq ($(PATH_LIST_DIR),)
	CFLAGS += -DPATH_LIST_DIR=$(PATH_LIST_DIR)
endif

#如果 PATH_MAP_DIR 值不为空，则增加宏 PATH_MAP_DIR
ifneq ($(PATH_MAP_DIR),)
	CFLAGS += -DPATH_MAP_DIR=$(PATH_MAP_DIR)
endif

#如果 PATH_LIB_DIR 值不为空，则增加宏 PATH_LIB_DIR
ifneq ($(PATH_LIB_DIR),)
	CFLAGS += -DPATH_LIB_DIR=$(PATH_LIB_DIR)
endif

#如果 PATH_LIST 值不为空，则增加宏 PATH_LIST
ifneq ($(PATH_LIST),)
	CFLAGS += -DPATH_LIST=$(PATH_LIST)
endif

#增加宏 BITLEN
CFLAGS += -DBITLEN=$(BITLEN)

all: clean $(TARGET)

pre:
	mkdir -p $(OBJ_PATH)

$(TARGET): clean pre
	g++ -o $(BIN_PATH)/$(TARGET) $(CFLAGS) $(SRC) 

clean_server:
	$(RM) $(BIN_PATH)/server $(OBJ_PATH)/mem_log_parse.o

clean:
	